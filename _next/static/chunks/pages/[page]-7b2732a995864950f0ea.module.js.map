{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?068a","webpack://_N_E/./pages/[page]/index.tsx"],"names":["window","__NEXT_P","push","Page","props","data","title","subtitle","text","appStore","useStore","useEffect","headerNav","meta","show","scrollTo","top","left","behavior","description","RemoveMarkdown","slice","replace","Provider","value","images","escapeHtml","showTOC","type","id","_id","allowComment","getInitialProps","async","Rest","get","ctx","query","page","observer"],"mappings":"yIACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,UACA,WACE,OAAO,EAAQ,Y,2MCSjBC,EAA+BC,IAAU,OACvC,KAAEC,GAASD,GACX,MAAEE,EAAF,SAASC,EAAT,KAAmBC,GAASH,GAC5B,SAAEI,GAAaC,cAmBrB,OAjBAC,oBAAU,KACRF,EAASG,UAAY,CACnBN,QACAO,KAAMN,EACNO,MAAM,GAED,KACLL,EAASG,UAAUE,MAAO,IAE3B,CAACL,EAAUF,EAAUD,IACxBK,oBAAU,KACRX,OAAOe,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,YAEX,CAACd,IAEF,EAAC,IAAD,CAAeE,MAAOA,EAAOC,SAAUA,GACrC,EAAC,IAAD,CACED,MAAOA,EACPa,YAAaC,IAAeZ,GAAMa,MAAM,EAAG,KAAKC,QAAQ,KAAM,MAEhE,EAAC,IAAkBC,SAAnB,CAA4BC,MAAOpB,EAAMC,KAAKoB,QAC5C,EAAC,IAAD,CAAUD,MAAOhB,EAAMkB,YAAY,EAAOC,SAAO,KAGnD,EAAC,IACK,CACFC,KAAM,OACNC,GAAIzB,EAAMC,KAAKyB,IACfC,aAAY,UAAE3B,EAAMC,KAAK0B,oBAAb,aAMtB5B,EAAK6B,gBAAkBC,UACrB,IAAM,KAAE5B,SAAe6B,YAAK,OAAQ,QAAQC,IAC1CC,EAAIC,MAAMC,MAGZ,MAAO,CAAEjC,SAGIkC,sBAASpC,K","file":"static/chunks/pages/[page]-7b2732a995864950f0ea.module.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[page]\",\n      function () {\n        return require(\"private-next-pages/[page]/index.tsx\");\n      }\n    ]);\n  ","import { useStore } from 'common/store'\nimport { CommentLazy } from 'components/Comment'\nimport Markdown from 'components/MD-render'\nimport { ArticleLayout } from 'layouts/ArticleLayout'\nimport { observer } from 'mobx-react'\nimport { PageRespDto } from 'models/page'\nimport { NextPage } from 'next'\nimport { useEffect } from 'react'\nimport RemoveMarkdown from 'remove-markdown'\nimport { Rest } from 'utils/api'\nimport { ImageSizesContext } from '../../common/context/ImageSizes'\nimport { Seo } from '../../components/SEO'\n\nconst Page: NextPage<PageRespDto> = (props) => {\n  const { data } = props\n  const { title, subtitle, text } = data\n  const { appStore } = useStore()\n\n  useEffect(() => {\n    appStore.headerNav = {\n      title,\n      meta: subtitle,\n      show: true,\n    }\n    return () => {\n      appStore.headerNav.show = false\n    }\n  }, [appStore, subtitle, title])\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth',\n    })\n  }, [props])\n  return (\n    <ArticleLayout title={title} subtitle={subtitle}>\n      <Seo\n        title={title}\n        description={RemoveMarkdown(text).slice(0, 100).replace('\\n', '')}\n      />\n      <ImageSizesContext.Provider value={props.data.images}>\n        <Markdown value={text} escapeHtml={false} showTOC />\n      </ImageSizesContext.Provider>\n\n      <CommentLazy\n        {...{\n          type: 'Page',\n          id: props.data._id,\n          allowComment: props.data.allowComment ?? true,\n        }}\n      />\n    </ArticleLayout>\n  )\n}\nPage.getInitialProps = async (ctx) => {\n  const { data } = await Rest('Page', 'slug').get<PageRespDto>(\n    ctx.query.page as string,\n  )\n\n  return { data } as PageRespDto\n}\n\nexport default observer(Page)\n"],"sourceRoot":""}