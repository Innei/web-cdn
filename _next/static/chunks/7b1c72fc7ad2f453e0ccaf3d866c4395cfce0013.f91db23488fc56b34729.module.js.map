{"version":3,"sources":["webpack://_N_E/./node_modules/mobx-react/dist/mobxreact.esm.js","webpack://_N_E/./node_modules/mobx-react-lite/dist/mobxreactlite.esm.js"],"names":["symbolId","createdSymbols","newSymbol","name","Symbol","symbol","createSymbol","shallowEqual","objA","objB","is","keysA","Object","keys","keysB","length","i","hasOwnProperty","call","x","y","hoistBlackList","$$typeof","render","compare","type","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","setHiddenProp","target","prop","value","defineProperty","enumerable","configurable","writable","mobxMixins","mobxPatchedDefinition","wrapper","realMethod","_this","this","_len","arguments","args","Array","_key","locks","retVal","undefined","apply","methods","forEach","mx","wrapFunction","_len2","_key2","concat","patch","methodName","mixinMethod","methodMixins","getMixins","indexOf","push","oldDefinition","getOwnPropertyDescriptor","originalMethod","newDefinition","createDefinition","_ref","wrappedFunc","get","set","mobxAdminProperty","mobxObserverProperty","mobxIsUnmounted","skipRenderKey","isForcingUpdateKey","makeClassComponentObserver","componentClass","prototype","displayName","getDisplayName","console","warn","componentWillReact","Error","shouldComponentUpdate","observerSCU","makeObservableProp","baseRender","makeComponentReactive","_this$render$mobxAdmi","dispose","_displayName","comp","constructor","initialName","bind","isRenderingPending","reaction","hasError","forceUpdate","reactiveRender","exception","rendering","track","e","nextProps","nextState","state","props","propName","valueHolderKey","atomHolderKey","getAtom","prevReadState","reportObserved","v","reportChanged","hasSymbol","for","ReactForwardRefSymbol","ReactMemoSymbol","observer","component","isPrototypeOf","_extends","assign","source","key","MobXProviderContext","createContext","Provider","children","stores","excluded","sourceKeys","_objectWithoutPropertiesLoose","parentValue","useContext","useRef","current","createElement","createStoreInjector","grabStoresFn","injectNames","makeReactive","Injector","forwardRef","ref","newProps","context","base","protoProps","getOwnPropertyNames","getPrototypeOf","copyStaticProperties","componentName","getInjectName","inject","storeNames","baseStores","storeName","grabStoresByName","join","globalIsUsingStaticRendering","isUsingStaticRendering","useForceUpdate","setTick","tick","printDebugValue","reactionCleanupHandle","CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS","CLEANUP_TIMER_LOOP_MILLIS","uncommittedReactionRefs","Set","ensureCleanupTimerRunning","setTimeout","cleanUncommittedReactions","now","Date","tracking","cleanAt","delete","size","EMPTY_OBJECT","observerComponentNameFor","baseComponentName","useObserver","fn","options","reactionTrackingRef","newReaction","trackingData","mounted","createTrackingData","add","useDebugValue","useEffect","reactionRef","Infinity","baseComponent","memoComponent","realOptions","wrappedComponent","ObserverComponent","ObserverPropsCheck","location","propFullName","extraKey","hasProp","hasExtraProp"],"mappings":"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","file":"static/chunks/7b1c72fc7ad2f453e0ccaf3d866c4395cfce0013.f91db23488fc56b34729.module.js","sourcesContent":["import { Reaction, _allowStateChanges, _allowStateReadsStart, _allowStateReadsEnd, $mobx, createAtom, untracked, isObservableMap, isObservableObject, isObservableArray, observable } from 'mobx';\nimport React__default, { PureComponent, Component, forwardRef, memo, createElement } from 'react';\nimport { isUsingStaticRendering, Observer, observer as observer$1 } from 'mobx-react-lite';\nexport { Observer, isObserverBatched, isUsingStaticRendering, observerBatching, observerBatchingOptOut, useAsObservableSource, useLocalStore, useObserver, useStaticRendering } from 'mobx-react-lite';\n\nvar symbolId = 0;\n\nfunction createSymbol(name) {\n  if (typeof Symbol === \"function\") {\n    return Symbol(name);\n  }\n\n  var symbol = \"__$mobx-react \" + name + \" (\" + symbolId + \")\";\n  symbolId++;\n  return symbol;\n}\n\nvar createdSymbols = {};\nfunction newSymbol(name) {\n  if (!createdSymbols[name]) {\n    createdSymbols[name] = createSymbol(name);\n  }\n\n  return createdSymbols[name];\n}\nfunction shallowEqual(objA, objB) {\n  //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\n\nvar hoistBlackList = {\n  $$typeof: 1,\n  render: 1,\n  compare: 1,\n  type: 1,\n  childContextTypes: 1,\n  contextType: 1,\n  contextTypes: 1,\n  defaultProps: 1,\n  getDefaultProps: 1,\n  getDerivedStateFromError: 1,\n  getDerivedStateFromProps: 1,\n  mixins: 1,\n  propTypes: 1\n};\nfunction copyStaticProperties(base, target) {\n  var protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base));\n  Object.getOwnPropertyNames(base).forEach(function (key) {\n    if (!hoistBlackList[key] && protoProps.indexOf(key) === -1) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}\n/**\r\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\r\n * @param target\r\n * @param prop\r\n * @param value\r\n */\n\nfunction setHiddenProp(target, prop, value) {\n  if (!Object.hasOwnProperty.call(target, prop)) {\n    Object.defineProperty(target, prop, {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: value\n    });\n  } else {\n    target[prop] = value;\n  }\n}\n/**\r\n * Utilities for patching componentWillUnmount, to make sure @disposeOnUnmount works correctly icm with user defined hooks\r\n * and the handler provided by mobx-react\r\n */\n\nvar mobxMixins =\n/*#__PURE__*/\nnewSymbol(\"patchMixins\");\nvar mobxPatchedDefinition =\n/*#__PURE__*/\nnewSymbol(\"patchedDefinition\");\n\nfunction getMixins(target, methodName) {\n  var mixins = target[mobxMixins] = target[mobxMixins] || {};\n  var methodMixins = mixins[methodName] = mixins[methodName] || {};\n  methodMixins.locks = methodMixins.locks || 0;\n  methodMixins.methods = methodMixins.methods || [];\n  return methodMixins;\n}\n\nfunction wrapper(realMethod, mixins) {\n  var _this = this;\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  // locks are used to ensure that mixins are invoked only once per invocation, even on recursive calls\n  mixins.locks++;\n\n  try {\n    var retVal;\n\n    if (realMethod !== undefined && realMethod !== null) {\n      retVal = realMethod.apply(this, args);\n    }\n\n    return retVal;\n  } finally {\n    mixins.locks--;\n\n    if (mixins.locks === 0) {\n      mixins.methods.forEach(function (mx) {\n        mx.apply(_this, args);\n      });\n    }\n  }\n}\n\nfunction wrapFunction(realMethod, mixins) {\n  var fn = function fn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    wrapper.call.apply(wrapper, [this, realMethod, mixins].concat(args));\n  };\n\n  return fn;\n}\n\nfunction patch(target, methodName, mixinMethod) {\n  var mixins = getMixins(target, methodName);\n\n  if (mixins.methods.indexOf(mixinMethod) < 0) {\n    mixins.methods.push(mixinMethod);\n  }\n\n  var oldDefinition = Object.getOwnPropertyDescriptor(target, methodName);\n\n  if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {\n    // already patched definition, do not repatch\n    return;\n  }\n\n  var originalMethod = target[methodName];\n  var newDefinition = createDefinition(target, methodName, oldDefinition ? oldDefinition.enumerable : undefined, mixins, originalMethod);\n  Object.defineProperty(target, methodName, newDefinition);\n}\n\nfunction createDefinition(target, methodName, enumerable, mixins, originalMethod) {\n  var _ref;\n\n  var wrappedFunc = wrapFunction(originalMethod, mixins);\n  return _ref = {}, _ref[mobxPatchedDefinition] = true, _ref.get = function get() {\n    return wrappedFunc;\n  }, _ref.set = function set(value) {\n    if (this === target) {\n      wrappedFunc = wrapFunction(value, mixins);\n    } else {\n      // when it is an instance of the prototype/a child prototype patch that particular case again separately\n      // since we need to store separate values depending on wether it is the actual instance, the prototype, etc\n      // e.g. the method for super might not be the same as the method for the prototype which might be not the same\n      // as the method for the instance\n      var newDefinition = createDefinition(this, methodName, enumerable, mixins, value);\n      Object.defineProperty(this, methodName, newDefinition);\n    }\n  }, _ref.configurable = true, _ref.enumerable = enumerable, _ref;\n}\n\nvar mobxAdminProperty = $mobx || \"$mobx\";\nvar mobxObserverProperty =\n/*#__PURE__*/\nnewSymbol(\"isMobXReactObserver\");\nvar mobxIsUnmounted =\n/*#__PURE__*/\nnewSymbol(\"isUnmounted\");\nvar skipRenderKey =\n/*#__PURE__*/\nnewSymbol(\"skipRender\");\nvar isForcingUpdateKey =\n/*#__PURE__*/\nnewSymbol(\"isForcingUpdate\");\nfunction makeClassComponentObserver(componentClass) {\n  var target = componentClass.prototype;\n\n  if (componentClass[mobxObserverProperty]) {\n    var displayName = getDisplayName(target);\n    console.warn(\"The provided component class (\" + displayName + \") \\n                has already been declared as an observer component.\");\n  } else {\n    componentClass[mobxObserverProperty] = true;\n  }\n\n  if (target.componentWillReact) throw new Error(\"The componentWillReact life-cycle event is no longer supported\");\n\n  if (componentClass[\"__proto__\"] !== PureComponent) {\n    if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU;else if (target.shouldComponentUpdate !== observerSCU) // n.b. unequal check, instead of existence check, as @observer might be on superclass as well\n      throw new Error(\"It is not allowed to use shouldComponentUpdate in observer based components.\");\n  } // this.props and this.state are made observable, just to make sure @computed fields that\n  // are defined inside the component, and which rely on state or props, re-compute if state or props change\n  // (otherwise the computed wouldn't update and become stale on props change, since props are not observable)\n  // However, this solution is not without it's own problems: https://github.com/mobxjs/mobx-react/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3Aobservable-props-or-not+\n\n\n  makeObservableProp(target, \"props\");\n  makeObservableProp(target, \"state\");\n  var baseRender = target.render;\n\n  target.render = function () {\n    return makeComponentReactive.call(this, baseRender);\n  };\n\n  patch(target, \"componentWillUnmount\", function () {\n    var _this$render$mobxAdmi;\n\n    if (isUsingStaticRendering() === true) return;\n    (_this$render$mobxAdmi = this.render[mobxAdminProperty]) === null || _this$render$mobxAdmi === void 0 ? void 0 : _this$render$mobxAdmi.dispose();\n    this[mobxIsUnmounted] = true;\n\n    if (!this.render[mobxAdminProperty]) {\n      // Render may have been hot-swapped and/or overriden by a subclass.\n      var _displayName = getDisplayName(this);\n\n      console.warn(\"The reactive render of an observer class component (\" + _displayName + \") \\n                was overriden after MobX attached. This may result in a memory leak if the \\n                overriden reactive render was not properly disposed.\");\n    }\n  });\n  return componentClass;\n} // Generates a friendly name for debugging\n\nfunction getDisplayName(comp) {\n  return comp.displayName || comp.name || comp.constructor && (comp.constructor.displayName || comp.constructor.name) || \"<component>\";\n}\n\nfunction makeComponentReactive(render) {\n  var _this = this;\n\n  if (isUsingStaticRendering() === true) return render.call(this);\n  /**\r\n   * If props are shallowly modified, react will render anyway,\r\n   * so atom.reportChanged() should not result in yet another re-render\r\n   */\n\n  setHiddenProp(this, skipRenderKey, false);\n  /**\r\n   * forceUpdate will re-assign this.props. We don't want that to cause a loop,\r\n   * so detect these changes\r\n   */\n\n  setHiddenProp(this, isForcingUpdateKey, false);\n  var initialName = getDisplayName(this);\n  var baseRender = render.bind(this);\n  var isRenderingPending = false;\n  var reaction = new Reaction(initialName + \".render()\", function () {\n    if (!isRenderingPending) {\n      // N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)\n      // This unidiomatic React usage but React will correctly warn about this so we continue as usual\n      // See #85 / Pull #44\n      isRenderingPending = true;\n\n      if (_this[mobxIsUnmounted] !== true) {\n        var hasError = true;\n\n        try {\n          setHiddenProp(_this, isForcingUpdateKey, true);\n          if (!_this[skipRenderKey]) Component.prototype.forceUpdate.call(_this);\n          hasError = false;\n        } finally {\n          setHiddenProp(_this, isForcingUpdateKey, false);\n          if (hasError) reaction.dispose();\n        }\n      }\n    }\n  });\n  reaction[\"reactComponent\"] = this;\n  reactiveRender[mobxAdminProperty] = reaction;\n  this.render = reactiveRender;\n\n  function reactiveRender() {\n    isRenderingPending = false;\n    var exception = undefined;\n    var rendering = undefined;\n    reaction.track(function () {\n      try {\n        rendering = _allowStateChanges(false, baseRender);\n      } catch (e) {\n        exception = e;\n      }\n    });\n\n    if (exception) {\n      throw exception;\n    }\n\n    return rendering;\n  }\n\n  return reactiveRender.call(this);\n}\n\nfunction observerSCU(nextProps, nextState) {\n  if (isUsingStaticRendering()) {\n    console.warn(\"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\");\n  } // update on any state changes (as is the default)\n\n\n  if (this.state !== nextState) {\n    return true;\n  } // update if props are shallowly not equal, inspired by PureRenderMixin\n  // we could return just 'false' here, and avoid the `skipRender` checks etc\n  // however, it is nicer if lifecycle events are triggered like usually,\n  // so we return true here if props are shallowly modified.\n\n\n  return !shallowEqual(this.props, nextProps);\n}\n\nfunction makeObservableProp(target, propName) {\n  var valueHolderKey = newSymbol(\"reactProp_\" + propName + \"_valueHolder\");\n  var atomHolderKey = newSymbol(\"reactProp_\" + propName + \"_atomHolder\");\n\n  function getAtom() {\n    if (!this[atomHolderKey]) {\n      setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName));\n    }\n\n    return this[atomHolderKey];\n  }\n\n  Object.defineProperty(target, propName, {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var prevReadState = false;\n\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        prevReadState = _allowStateReadsStart(true);\n      }\n\n      getAtom.call(this).reportObserved();\n\n      if (_allowStateReadsStart && _allowStateReadsEnd) {\n        _allowStateReadsEnd(prevReadState);\n      }\n\n      return this[valueHolderKey];\n    },\n    set: function set(v) {\n      if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n        setHiddenProp(this, valueHolderKey, v);\n        setHiddenProp(this, skipRenderKey, true);\n        getAtom.call(this).reportChanged();\n        setHiddenProp(this, skipRenderKey, false);\n      } else {\n        setHiddenProp(this, valueHolderKey, v);\n      }\n    }\n  });\n}\n\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for; // Using react-is had some issues (and operates on elements, not on types), see #608 / #609\n\nvar ReactForwardRefSymbol = hasSymbol ?\n/*#__PURE__*/\nSymbol.for(\"react.forward_ref\") : typeof forwardRef === \"function\" &&\n/*#__PURE__*/\nforwardRef(function (props) {\n  return null;\n})[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol ?\n/*#__PURE__*/\nSymbol.for(\"react.memo\") : typeof memo === \"function\" &&\n/*#__PURE__*/\nmemo(function (props) {\n  return null;\n})[\"$$typeof\"];\n/**\r\n * Observer function / decorator\r\n */\n\nfunction observer(component) {\n  if (component[\"isMobxInjector\"] === true) {\n    console.warn(\"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\");\n  }\n\n  if (ReactMemoSymbol && component[\"$$typeof\"] === ReactMemoSymbol) {\n    throw new Error(\"Mobx observer: You are trying to use 'observer' on a function component wrapped in either another observer or 'React.memo'. The observer already applies 'React.memo' for you.\");\n  } // Unwrap forward refs into `<Observer>` component\n  // we need to unwrap the render, because it is the inner render that needs to be tracked,\n  // not the ForwardRef HoC\n\n\n  if (ReactForwardRefSymbol && component[\"$$typeof\"] === ReactForwardRefSymbol) {\n    var baseRender = component[\"render\"];\n    if (typeof baseRender !== \"function\") throw new Error(\"render property of ForwardRef was not a function\");\n    return forwardRef(function ObserverForwardRef() {\n      var args = arguments;\n      return createElement(Observer, null, function () {\n        return baseRender.apply(undefined, args);\n      });\n    });\n  } // Function component\n\n\n  if (typeof component === \"function\" && (!component.prototype || !component.prototype.render) && !component[\"isReactClass\"] && !Object.prototype.isPrototypeOf.call(Component, component)) {\n    return observer$1(component);\n  }\n\n  return makeClassComponentObserver(component);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar MobXProviderContext =\n/*#__PURE__*/\nReact__default.createContext({});\nfunction Provider(props) {\n  var children = props.children,\n      stores = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n  var parentValue = React__default.useContext(MobXProviderContext);\n  var mutableProviderRef = React__default.useRef(_extends({}, parentValue, {}, stores));\n  var value = mutableProviderRef.current;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var newValue = _extends({}, value, {}, stores); // spread in previous state for the context based stores\n\n\n    if (!shallowEqual(value, newValue)) {\n      throw new Error(\"MobX Provider: The set of provided stores has changed. See: https://github.com/mobxjs/mobx-react#the-set-of-provided-stores-has-changed-error.\");\n    }\n  }\n\n  return React__default.createElement(MobXProviderContext.Provider, {\n    value: value\n  }, children);\n}\nProvider.displayName = \"MobXProvider\";\n\n/**\r\n * Store Injection\r\n */\n\nfunction createStoreInjector(grabStoresFn, component, injectNames, makeReactive) {\n  // Support forward refs\n  var Injector = React__default.forwardRef(function (props, ref) {\n    var newProps = _extends({}, props);\n\n    var context = React__default.useContext(MobXProviderContext);\n    Object.assign(newProps, grabStoresFn(context || {}, newProps) || {});\n\n    if (ref) {\n      newProps.ref = ref;\n    }\n\n    return React__default.createElement(component, newProps);\n  });\n  if (makeReactive) Injector = observer(Injector);\n  Injector[\"isMobxInjector\"] = true; // assigned late to suppress observer warning\n  // Static fields from component should be visible on the generated Injector\n\n  copyStaticProperties(component, Injector);\n  Injector[\"wrappedComponent\"] = component;\n  Injector.displayName = getInjectName(component, injectNames);\n  return Injector;\n}\n\nfunction getInjectName(component, injectNames) {\n  var displayName;\n  var componentName = component.displayName || component.name || component.constructor && component.constructor.name || \"Component\";\n  if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\";else displayName = \"inject(\" + componentName + \")\";\n  return displayName;\n}\n\nfunction grabStoresByName(storeNames) {\n  return function (baseStores, nextProps) {\n    storeNames.forEach(function (storeName) {\n      if (storeName in nextProps // prefer props over stores\n      ) return;\n      if (!(storeName in baseStores)) throw new Error(\"MobX injector: Store '\" + storeName + \"' is not available! Make sure it is provided by some Provider\");\n      nextProps[storeName] = baseStores[storeName];\n    });\n    return nextProps;\n  };\n}\n/**\r\n * higher order component that injects stores to a child.\r\n * takes either a varargs list of strings, which are stores read from the context,\r\n * or a function that manually maps the available stores from the context to props:\r\n * storesToProps(mobxStores, props, context) => newProps\r\n */\n\n\nfunction inject() {\n  for (var _len = arguments.length, storeNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    storeNames[_key] = arguments[_key];\n  }\n\n  if (typeof arguments[0] === \"function\") {\n    var grabStoresFn = arguments[0];\n    return function (componentClass) {\n      return createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true);\n    };\n  } else {\n    return function (componentClass) {\n      return createStoreInjector(grabStoresByName(storeNames), componentClass, storeNames.join(\"-\"), false);\n    };\n  }\n}\n\nvar protoStoreKey =\n/*#__PURE__*/\nnewSymbol(\"disposeOnUnmountProto\");\nvar instStoreKey =\n/*#__PURE__*/\nnewSymbol(\"disposeOnUnmountInst\");\n\nfunction runDisposersOnWillUnmount() {\n  var _this = this;\n  [].concat(this[protoStoreKey] || [], this[instStoreKey] || []).forEach(function (propKeyOrFunction) {\n    var prop = typeof propKeyOrFunction === \"string\" ? _this[propKeyOrFunction] : propKeyOrFunction;\n\n    if (prop !== undefined && prop !== null) {\n      if (Array.isArray(prop)) prop.map(function (f) {\n        return f();\n      });else prop();\n    }\n  });\n}\n\nfunction disposeOnUnmount(target, propertyKeyOrFunction) {\n  if (Array.isArray(propertyKeyOrFunction)) {\n    return propertyKeyOrFunction.map(function (fn) {\n      return disposeOnUnmount(target, fn);\n    });\n  }\n\n  var c = Object.getPrototypeOf(target).constructor;\n  var c2 = Object.getPrototypeOf(target.constructor); // Special case for react-hot-loader\n\n  var c3 = Object.getPrototypeOf(Object.getPrototypeOf(target));\n\n  if (!(c === React__default.Component || c === React__default.PureComponent || c2 === React__default.Component || c2 === React__default.PureComponent || c3 === React__default.Component || c3 === React__default.PureComponent)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\");\n  }\n\n  if (typeof propertyKeyOrFunction !== \"string\" && typeof propertyKeyOrFunction !== \"function\" && !Array.isArray(propertyKeyOrFunction)) {\n    throw new Error(\"[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.\");\n  } // decorator's target is the prototype, so it doesn't have any instance properties like props\n\n\n  var isDecorator = typeof propertyKeyOrFunction === \"string\"; // add property key / function we want run (disposed) to the store\n\n  var componentWasAlreadyModified = !!target[protoStoreKey] || !!target[instStoreKey];\n  var store = isDecorator ? // decorators are added to the prototype store\n  target[protoStoreKey] || (target[protoStoreKey] = []) : // functions are added to the instance store\n  target[instStoreKey] || (target[instStoreKey] = []);\n  store.push(propertyKeyOrFunction); // tweak the component class componentWillUnmount if not done already\n\n  if (!componentWasAlreadyModified) {\n    patch(target, \"componentWillUnmount\", runDisposersOnWillUnmount);\n  } // return the disposer as is if invoked as a non decorator\n\n\n  if (typeof propertyKeyOrFunction !== \"string\") {\n    return propertyKeyOrFunction;\n  }\n}\n\nfunction createChainableTypeChecker(validator) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    for (var _len = arguments.length, rest = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      rest[_key - 6] = arguments[_key];\n    }\n\n    return untracked(function () {\n      componentName = componentName || \"<<anonymous>>\";\n      propFullName = propFullName || propName;\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          var actual = props[propName] === null ? \"null\" : \"undefined\";\n          return new Error(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + \"in `\" + componentName + \"`, but its value is `\" + actual + \"`.\");\n        }\n\n        return null;\n      } else {\n        // @ts-ignore rest arg is necessary for some React internals - fails tests otherwise\n        return validator.apply(void 0, [props, propName, componentName, location, propFullName].concat(rest));\n      }\n    });\n  }\n\n  var chainedCheckType = checkType.bind(null, false); // Add isRequired to satisfy Requirable\n\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n} // Copied from React.PropTypes\n\n\nfunction isSymbol(propType, propValue) {\n  // Native Symbol.\n  if (propType === \"symbol\") {\n    return true;\n  } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n  if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n    return true;\n  } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n  if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n    return true;\n  }\n\n  return false;\n} // Copied from React.PropTypes\n\n\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n\n  if (Array.isArray(propValue)) {\n    return \"array\";\n  }\n\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return \"object\";\n  }\n\n  if (isSymbol(propType, propValue)) {\n    return \"symbol\";\n  }\n\n  return propType;\n} // This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\n\n\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n\n  if (propType === \"object\") {\n    if (propValue instanceof Date) {\n      return \"date\";\n    } else if (propValue instanceof RegExp) {\n      return \"regexp\";\n    }\n  }\n\n  return propType;\n}\n\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    return untracked(function () {\n      if (allowNativeType) {\n        if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;\n      }\n\n      var mobxChecker;\n\n      switch (mobxType) {\n        case \"Array\":\n          mobxChecker = isObservableArray;\n          break;\n\n        case \"Object\":\n          mobxChecker = isObservableObject;\n          break;\n\n        case \"Map\":\n          mobxChecker = isObservableMap;\n          break;\n\n        default:\n          throw new Error(\"Unexpected mobxType: \" + mobxType);\n      }\n\n      var propValue = props[propName];\n\n      if (!mobxChecker(propValue)) {\n        var preciseType = getPreciseType(propValue);\n        var nativeTypeExpectationMessage = allowNativeType ? \" or javascript `\" + mobxType.toLowerCase() + \"`\" : \"\";\n        return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + preciseType + \"` supplied to\" + \" `\" + componentName + \"`, expected `mobx.Observable\" + mobxType + \"`\" + nativeTypeExpectationMessage + \".\");\n      }\n\n      return null;\n    });\n  });\n}\n\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n  return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {\n      rest[_key2 - 5] = arguments[_key2];\n    }\n\n    return untracked(function () {\n      if (typeof typeChecker !== \"function\") {\n        return new Error(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has \" + \"invalid PropType notation.\");\n      } else {\n        var error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(props, propName, componentName, location, propFullName);\n        if (error instanceof Error) return error;\n        var propValue = props[propName];\n\n        for (var i = 0; i < propValue.length; i++) {\n          error = typeChecker.apply(void 0, [propValue, i, componentName, location, propFullName + \"[\" + i + \"]\"].concat(rest));\n          if (error instanceof Error) return error;\n        }\n\n        return null;\n      }\n    });\n  });\n}\n\nvar observableArray =\n/*#__PURE__*/\ncreateObservableTypeCheckerCreator(false, \"Array\");\nvar observableArrayOf =\n/*#__PURE__*/\ncreateObservableArrayOfTypeChecker.bind(null, false);\nvar observableMap =\n/*#__PURE__*/\ncreateObservableTypeCheckerCreator(false, \"Map\");\nvar observableObject =\n/*#__PURE__*/\ncreateObservableTypeCheckerCreator(false, \"Object\");\nvar arrayOrObservableArray =\n/*#__PURE__*/\ncreateObservableTypeCheckerCreator(true, \"Array\");\nvar arrayOrObservableArrayOf =\n/*#__PURE__*/\ncreateObservableArrayOfTypeChecker.bind(null, true);\nvar objectOrObservableObject =\n/*#__PURE__*/\ncreateObservableTypeCheckerCreator(true, \"Object\");\nvar PropTypes = {\n  observableArray: observableArray,\n  observableArrayOf: observableArrayOf,\n  observableMap: observableMap,\n  observableObject: observableObject,\n  arrayOrObservableArray: arrayOrObservableArray,\n  arrayOrObservableArrayOf: arrayOrObservableArrayOf,\n  objectOrObservableObject: objectOrObservableObject\n};\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\");\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\");\n\nexport { MobXProviderContext, PropTypes, Provider, disposeOnUnmount, inject, observer };\n//# sourceMappingURL=mobxreact.esm.js.map\n","import { spy, configure, getDependencyTree, Reaction, observable, runInAction, transaction } from 'mobx';\nimport React, { useState, useCallback, memo, forwardRef } from 'react';\n\nif (!useState) {\n  throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\n\nif (!spy) {\n  throw new Error(\"mobx-react-lite requires mobx at least version 4 to be available\");\n}\n\nvar globalIsUsingStaticRendering = false;\nfunction useStaticRendering(enable) {\n  globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n  return globalIsUsingStaticRendering;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction useForceUpdate() {\n  var _useState = useState(0),\n      setTick = _useState[1];\n\n  var update = useCallback(function () {\n    setTick(function (tick) {\n      return tick + 1;\n    });\n  }, []);\n  return update;\n}\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\") {\n    return false;\n  }\n\n  var proto = Object.getPrototypeOf(value);\n  return !proto || proto === Object.prototype;\n}\nfunction getSymbol(name) {\n  if (typeof Symbol === \"function\") {\n    return Symbol.for(name);\n  }\n\n  return \"__$mobx-react \" + name + \"__\";\n}\nvar mockGlobal = {};\nfunction getGlobal() {\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n\n  return mockGlobal;\n}\n\nvar observerBatchingConfiguredSymbol =\n/*#__PURE__*/\ngetSymbol(\"observerBatching\");\nvar observerBatching = function observerBatching(reactionScheduler) {\n  if (typeof reactionScheduler === \"function\") {\n    configure({\n      reactionScheduler: reactionScheduler\n    });\n  }\n\n  getGlobal()[observerBatchingConfiguredSymbol] = true;\n};\nvar observerBatchingOptOut = function observerBatchingOptOut() {\n  configure({\n    reactionScheduler: undefined\n  });\n  getGlobal()[observerBatchingConfiguredSymbol] = true;\n};\nvar isObserverBatched = function isObserverBatched() {\n  return getGlobal()[observerBatchingConfiguredSymbol];\n};\n\nfunction printDebugValue(v) {\n  return getDependencyTree(v);\n}\n\nfunction createTrackingData(reaction) {\n  var trackingData = {\n    cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS,\n    reaction: reaction\n  };\n  return trackingData;\n}\n/**\r\n * The minimum time before we'll clean up a Reaction created in a render\r\n * for a component that hasn't managed to run its effects. This needs to\r\n * be big enough to ensure that a component won't turn up and have its\r\n * effects run without being re-rendered.\r\n */\n\nvar CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10000;\n/**\r\n * The frequency with which we'll check for leaked reactions.\r\n */\n\nvar CLEANUP_TIMER_LOOP_MILLIS = 10000;\n/**\r\n * Reactions created by components that have yet to be fully mounted.\r\n */\n\nvar uncommittedReactionRefs =\n/*#__PURE__*/\nnew Set();\n/**\r\n * Latest 'uncommitted reactions' cleanup timer handle.\r\n */\n\nvar reactionCleanupHandle;\n\nfunction ensureCleanupTimerRunning() {\n  if (reactionCleanupHandle === undefined) {\n    reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS);\n  }\n}\n\nfunction scheduleCleanupOfReactionIfLeaked(ref) {\n  uncommittedReactionRefs.add(ref);\n  ensureCleanupTimerRunning();\n}\nfunction recordReactionAsCommitted(reactionRef) {\n  uncommittedReactionRefs.delete(reactionRef);\n}\n/**\r\n * Run by the cleanup timer to dispose any outstanding reactions\r\n */\n\nfunction cleanUncommittedReactions() {\n  reactionCleanupHandle = undefined; // Loop through all the candidate leaked reactions; those older\n  // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.\n\n  var now = Date.now();\n  uncommittedReactionRefs.forEach(function (ref) {\n    var tracking = ref.current;\n\n    if (tracking) {\n      if (now >= tracking.cleanAt) {\n        // It's time to tidy up this leaked reaction.\n        tracking.reaction.dispose();\n        ref.current = null;\n        uncommittedReactionRefs.delete(ref);\n      }\n    }\n  });\n\n  if (uncommittedReactionRefs.size > 0) {\n    // We've just finished a round of cleanups but there are still\n    // some leak candidates outstanding.\n    ensureCleanupTimerRunning();\n  }\n}\n\nvar EMPTY_OBJECT = {};\n\nfunction observerComponentNameFor(baseComponentName) {\n  return \"observer\" + baseComponentName;\n}\n\nvar warnedAboutBatching = false;\nfunction useObserver(fn, baseComponentName, options) {\n  if (baseComponentName === void 0) {\n    baseComponentName = \"observed\";\n  }\n\n  if (options === void 0) {\n    options = EMPTY_OBJECT;\n  }\n\n  if (isUsingStaticRendering()) {\n    return fn();\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && !warnedAboutBatching && !isObserverBatched()) {\n    console.warn(\"[MobX] You haven't configured observer batching which might result in unexpected behavior in some cases. See more at https://github.com/mobxjs/mobx-react-lite/#observer-batching\");\n    warnedAboutBatching = true;\n  }\n\n  var wantedForceUpdateHook = options.useForceUpdate || useForceUpdate;\n  var forceUpdate = wantedForceUpdateHook(); // StrictMode/ConcurrentMode/Suspense may mean that our component is\n  // rendered and abandoned multiple times, so we need to track leaked\n  // Reactions.\n\n  var reactionTrackingRef = React.useRef(null);\n\n  if (!reactionTrackingRef.current) {\n    // First render for this component (or first time since a previous\n    // reaction from an abandoned render was disposed).\n    var newReaction = new Reaction(observerComponentNameFor(baseComponentName), function () {\n      // Observable has changed, meaning we want to re-render\n      // BUT if we're a component that hasn't yet got to the useEffect()\n      // stage, we might be a component that _started_ to render, but\n      // got dropped, and we don't want to make state changes then.\n      // (It triggers warnings in StrictMode, for a start.)\n      if (trackingData.mounted) {\n        // We have reached useEffect(), so we're mounted, and can trigger an update\n        forceUpdate();\n      } else {\n        // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n        // when (and if) useEffect() arrives.  The easiest way to do that is just to\n        // drop our current reaction and allow useEffect() to recreate it.\n        newReaction.dispose();\n        reactionTrackingRef.current = null;\n      }\n    });\n    var trackingData = createTrackingData(newReaction);\n    reactionTrackingRef.current = trackingData;\n    scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);\n  }\n\n  var reaction = reactionTrackingRef.current.reaction;\n  React.useDebugValue(reaction, printDebugValue);\n  React.useEffect(function () {\n    // Called on first mount only\n    recordReactionAsCommitted(reactionTrackingRef);\n\n    if (reactionTrackingRef.current) {\n      // Great. We've already got our reaction from our render;\n      // all we need to do is to record that it's now mounted,\n      // to allow future observable changes to trigger re-renders\n      reactionTrackingRef.current.mounted = true;\n    } else {\n      // The reaction we set up in our render has been disposed.\n      // This is either due to bad timings of renderings, e.g. our\n      // component was paused for a _very_ long time, and our\n      // reaction got cleaned up, or we got a observable change\n      // between render and useEffect\n      // Re-create the reaction\n      reactionTrackingRef.current = {\n        reaction: new Reaction(observerComponentNameFor(baseComponentName), function () {\n          // We've definitely already been mounted at this point\n          forceUpdate();\n        }),\n        cleanAt: Infinity\n      };\n      forceUpdate();\n    }\n\n    return function () {\n      reactionTrackingRef.current.reaction.dispose();\n      reactionTrackingRef.current = null;\n    };\n  }, []); // render the original component, but have the\n  // reaction track the observables, so that rendering\n  // can be invalidated (see above) once a dependency changes\n\n  var rendering;\n  var exception;\n  reaction.track(function () {\n    try {\n      rendering = fn();\n    } catch (e) {\n      exception = e;\n    }\n  });\n\n  if (exception) {\n    throw exception; // re-throw any exceptions catched during rendering\n  }\n\n  return rendering;\n}\n\nfunction observer(baseComponent, options) {\n  // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n  if (isUsingStaticRendering()) {\n    return baseComponent;\n  }\n\n  var realOptions = _extends({\n    forwardRef: false\n  }, options);\n\n  var baseComponentName = baseComponent.displayName || baseComponent.name;\n\n  var wrappedComponent = function wrappedComponent(props, ref) {\n    return useObserver(function () {\n      return baseComponent(props, ref);\n    }, baseComponentName);\n  };\n\n  wrappedComponent.displayName = baseComponentName; // memo; we are not interested in deep updates\n  // in props; we assume that if deep objects are changed,\n  // this is in observables, which would have been tracked anyway\n\n  var memoComponent;\n\n  if (realOptions.forwardRef) {\n    // we have to use forwardRef here because:\n    // 1. it cannot go before memo, only after it\n    // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\n    //    since it wouldn't be a callable function anymore\n    memoComponent = memo(forwardRef(wrappedComponent));\n  } else {\n    memoComponent = memo(wrappedComponent);\n  }\n\n  copyStaticProperties(baseComponent, memoComponent);\n  memoComponent.displayName = baseComponentName;\n  return memoComponent;\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: true,\n  render: true,\n  compare: true,\n  type: true\n};\n\nfunction copyStaticProperties(base, target) {\n  Object.keys(base).forEach(function (key) {\n    if (!hoistBlackList[key]) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}\n\nfunction ObserverComponent(_ref) {\n  var children = _ref.children,\n      render = _ref.render;\n  var component = children || render;\n\n  if (typeof component !== \"function\") {\n    return null;\n  }\n\n  return useObserver(component);\n}\n\nObserverComponent.propTypes = {\n  children: ObserverPropsCheck,\n  render: ObserverPropsCheck\n};\nObserverComponent.displayName = \"Observer\";\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n  var extraKey = key === \"children\" ? \"render\" : \"children\";\n  var hasProp = typeof props[key] === \"function\";\n  var hasExtraProp = typeof props[extraKey] === \"function\";\n\n  if (hasProp && hasExtraProp) {\n    return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n  }\n\n  if (hasProp || hasExtraProp) {\n    return null;\n  }\n\n  return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + typeof props[key] + \"` supplied to\" + \" `\" + componentName + \"`, expected `function`.\");\n}\n\nfunction useAsObservableSourceInternal(current, usedByLocalStore) {\n  var culprit = usedByLocalStore ? \"useLocalStore\" : \"useAsObservableSource\";\n\n  if (process.env.NODE_ENV !== \"production\" && usedByLocalStore) {\n    var _React$useState = React.useState(current),\n        initialSource = _React$useState[0];\n\n    if (initialSource !== undefined && current === undefined || initialSource === undefined && current !== undefined) {\n      throw new Error(\"make sure you never pass `undefined` to \" + culprit);\n    }\n  }\n\n  if (usedByLocalStore && current === undefined) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== \"production\" && !isPlainObject(current)) {\n    throw new Error(culprit + \" expects a plain object as \" + (usedByLocalStore ? \"second\" : \"first\") + \" argument\");\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return observable(current, {}, {\n      deep: false\n    });\n  }),\n      res = _React$useState2[0];\n\n  if (process.env.NODE_ENV !== \"production\" && Object.keys(res).length !== Object.keys(current).length) {\n    throw new Error(\"the shape of objects passed to \" + culprit + \" should be stable\");\n  }\n\n  runInAction(function () {\n    Object.assign(res, current);\n  });\n  return res;\n}\nfunction useAsObservableSource(current) {\n  return useAsObservableSourceInternal(current, false);\n}\n\nfunction useLocalStore(initializer, current) {\n  var source = useAsObservableSourceInternal(current, true);\n  return React.useState(function () {\n    var local = observable(initializer(source));\n\n    if (isPlainObject(local)) {\n      runInAction(function () {\n        Object.keys(local).forEach(function (key) {\n          var value = local[key];\n\n          if (typeof value === \"function\") {\n            // @ts-ignore No idea why ts2536 is popping out here\n            local[key] = wrapInTransaction(value, local);\n          }\n        });\n      });\n    }\n\n    return local;\n  })[0];\n} // tslint:disable-next-line: ban-types\n\nfunction wrapInTransaction(fn, context) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return transaction(function () {\n      return fn.apply(context, args);\n    });\n  };\n}\n\nexport { ObserverComponent as Observer, isObserverBatched, isUsingStaticRendering, observer, observerBatching, observerBatchingOptOut, useAsObservableSource, useForceUpdate, useLocalStore, useObserver, useStaticRendering };\n//# sourceMappingURL=mobxreactlite.esm.js.map\n"],"sourceRoot":""}