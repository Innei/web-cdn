{"version":3,"file":"static/webpack/static/development/pages/projects/[id].js.a6ab22410b5f581c7446.hot-update.js","sources":["webpack:///./pages/projects/.tsx"],"sourcesContent":["import Kico from 'assets/images/Kico.jpg'\nimport { Image } from 'components/Image'\nimport { ProjectModel } from 'models/dto/project'\nimport { NextPage } from 'next'\nimport { Rest } from 'utils/api'\nimport ReactMarkdown from 'react-markdown'\n\ntype ProjectViewProps = ProjectModel\n\nconst ProjectView: NextPage<ProjectViewProps> = (props) => {\n  const { name, avatar } = props\n  return (\n    <main>\n      <section className=\"project-head\">\n        <Image defaultImage={Kico} alt={name} src={avatar as string} />\n        <h1>{name}</h1>\n        <p>{props.description}</p>\n        <p>\n          {props.previewUrl && (\n            <a href={props.previewUrl} className=\"btn blue\" target=\"_blank\">\n              预览站点\n            </a>\n          )}\n          {props.projectUrl && (\n            <a\n              href={props.projectUrl}\n              className=\"btn transparent\"\n              target=\"_blank\"\n            >\n              获取项目\n            </a>\n          )}\n          {props.docUrl && (\n            <a href={props.docUrl} className=\"btn transparent\" target=\"_blank\">\n              项目文档\n            </a>\n          )}\n        </p>\n      </section>\n      {props.images?.length && (\n        <section className=\"project-screenshot\">\n          {props.images.map((image, i) => {\n            return <img src={image} key={i} />\n          })}\n        </section>\n      )}\n\n      <article>\n        <ReactMarkdown source={props.text} />\n      </article>\n    </main>\n  )\n}\n\nProjectView.getInitialProps = async (ctx) => {\n  const { query } = ctx\n  const id = query.id as string\n  const { data } = await Rest('Project').get(id)\n  return data\n}\n\nexport default ProjectView\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;;;;A","sourceRoot":""}